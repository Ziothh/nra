// use std::{fs, path};
//
// use specta::ts::export;
//
// #[path = "./routing/mod.rs"]
// mod routing;
//
// #[allow(dead_code)]
// fn main() {
//     let export_config = specta::ts::ExportConfiguration::default();
//
//     // The path to the generated modules folder for the typescript package.
//     let path = path::Path::new(env!("CARGO_MANIFEST_DIR"))
//         .join("../lib/generated")
//         .canonicalize()
//         .expect("PROJECT_ROOT/lib/generated to be exist");
//
//     let contents: String = vec![
//         Ok("// NOTE: This file is autogenerated via the rust crate in this project \n\n".to_owned()),
//         export::<routing::NextRouter>(&export_config),
//         export::<routing::FilePurpose>(&export_config),
//     ]
//     .iter()
//     .flatten()
//     .map(|x| x.to_owned())
//     .collect::<Vec<String>>()
//     .join("\n");
//
//     fs::write(path.join("types.ts"), contents).expect("Types to be generated");
// }

fn main() {}
